# This example shows the same example as getting-started.yml but using Sloth Kubernetes CRD and SLO plugins.
# It will generate the Prometheus rules in a Kubernetes prometheus-operator PrometheusRules CRD.
#
# `sloth generate --debug -i ./examples/slo-plugin-k8s-getting-started.yml`
#
apiVersion: sloth.slok.dev/v1
kind: PrometheusServiceLevel
metadata:
  name: sloth-slo-my-service-with-slo-plugins
  namespace: monitoring
spec:
  service: "myservice"
  labels:
    owner: "myteam"
    repo: "myorg/myservice"
    tier: "2"
  sloPlugins:
    chain:
      - id: "sloth.dev/core/debug/v1"
        priority: 9999999
        config: {msg: "Plugin 99"}
      - id: "sloth.dev/core/debug/v1"
        priority: -999999
        config: {msg: "Plugin 0"}
  slos:
    - name: "requests-availability"
      objective: 99.9
      description: "Common SLO based on availability for HTTP request responses."
      plugins:
        chain:
          - id: "sloth.dev/core/debug/v1"
            priority: 1050
            config: {msg: "Plugin 5"}
          - id: "sloth.dev/core/debug/v1"
            priority: -1000
            config: {msg: "Plugin 1"}
          - id: "sloth.dev/core/debug/v1"
            priority: 1000
            config: {msg: "Plugin 4"}
          - id: "sloth.dev/core/debug/v1"
            priority: -200
            config: {msg: "Plugin 2"}
          - id: "sloth.dev/core/debug/v1"
            config: {msg: "Plugin 3"}
      sli:
        events:
          errorQuery: sum(rate(http_request_duration_seconds_count{job="myservice",code=~"(5..|429)"}[{{.window}}]))
          totalQuery: sum(rate(http_request_duration_seconds_count{job="myservice"}[{{.window}}]))
      alerting:
        name: MyServiceHighErrorRate
        labels:
          category: "availability"
        annotations:
          summary: "High error rate on 'myservice' requests responses"
        pageAlert:
          labels:
            severity: pageteam
            routing_key: myteam
        ticketAlert:
          labels:
            severity: "slack"
            slack_channel: "#alerts-myteam"
